---

- name: check oh-myposh installed or not
  ansible.builtin.command: which oh-my-posh
  failed_when: false
  changed_when: false
  check_mode: false
  register: posh_present

- name: Download oh-my-posh
  ansible.builtin.get_url:
    url: "{{ oh_my_posh_url }}"
    dest: /usr/local/bin/oh-my-posh
    mode: 0775
  when: posh_present.rc == 1

- name: Create a font directory if it does not exist
  ansible.builtin.file:
    path: /home/{{ ansible_user }}/.fonts
    state: directory
    mode: 0755
    group: "{{ ansible_user }}"
    owner: "{{ ansible_user }}"

- name: Download & unzip fonts
  ansible.builtin.unarchive:
    src: "{{ meslofont_url }}"
    dest: /home/{{ ansible_user }}/.fonts/
    remote_src: 'yes'

- name: refresh font cache
  ansible.builtin.command: 'fc-cache -fv'
  failed_when: false
  changed_when: false
  check_mode: false

- name: create config directory
  ansible.builtin.file:
    path: /home/{{ ansible_user }}/.poshthemes
    state: directory
    mode: u+rw
    group: "{{ ansible_user }}"
    owner: "{{ ansible_user }}"

- name: Copy theme config json
  ansible.builtin.copy:
    src: config/theme.json
    dest: /home/{{ ansible_user }}/.poshthemes/{{ ansible_user }}.omp.json
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0760'

- name: add posh config to bashrc
  ansible.builtin.lineinfile:
    path: /home/{{ ansible_user }}/.bashrc
    line: "{{ poshconfig }}"
    insertafter: EOF
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: resource bashrc
  ansible.builtin.command: . /home/{{ ansible_user }}/.bashrc
  failed_when: false
  changed_when: false
  check_mode: false
